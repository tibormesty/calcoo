/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2015 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by all applicable intellectual property laws,
* including trade secret and or copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
import{sendAnalytics}from"../gsuite/util.js";import{getUserId,updateDrivePDFUrl}from"./util.js";import{processForListView}from"./list-view-touch-point-service.js";import state from"./state.js";const PDF_MIME_TYPE="application/pdf",getParsedJSON=e=>{let t;try{t=JSON.parse(e)}catch(e){}return t},getAttachmentURL=e=>{let t=e.replace("&disp=safe","")+"&disp=inline";return getUserId()&&(t=t.replace("/mail/?",`/mail/u/${getUserId()}/?`)),t},acrobatMailDataHandler=e=>{let t;e?.detail?.url?.includes("/fd")?t=parseFDResponse(e?.detail?.responseData):e?.detail?.url?.includes("/i/s")?t=parseISResponse(e?.detail?.responseData):e?.detail?.url?.includes("/bv")?t=parseBVResponse(e?.detail?.responseData):e?.detail?.url?.includes("gmSetData")&&(t=parseGMSetData(e?.detail?.responseData,e?.detail?.key)),updateExistingThreadData(t,!0),processForListView()},addMailDataEventListener=()=>{document.addEventListener("acrobat-mail-data",(e=>{setTimeout((()=>{acrobatMailDataHandler(e)}),0)}),{signal:state?.eventControllerSignal})},injectResponseListenerScript=()=>{if(state?.gmailResponseListenerAdded)return;const e=document.createElement("script");e.setAttribute("id","acrobat-response-interceptor"),e.src=chrome.runtime.getURL("content_scripts/gmail/gmail-inject.js"),e.onload=function(){this.remove()},(document.head||document.documentElement).appendChild(e),state.gmailResponseListenerAdded=!0},updateExistingThreadData=(e,t)=>{e&&Object.keys(e).forEach((r=>{const a=e[r].messages,s={id:r,messages:{...state.getMessagesForThreadId(r)||{},...a}};t?state.setDataForThread(s):e[e]=s}))},parseISAttachments=e=>{try{const t=[];if(Array.isArray(e))for(let r of e)if(r[0]===PDF_MIME_TYPE){const e=getAttachmentURL(r[5]);t.push({name:r[1],url:e})}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISAParsingFailed"]]),null}},updatePdfUrlAndAddToList=(e,t,r)=>{if(t?.toLowerCase().endsWith(".pdf")){const a=updateDrivePDFUrl(e);a&&r.push({name:t,url:a,isDriveAsset:!0})}},parseISDriveAttachments=e=>{try{const t=[],r=e[12]?.[28];if(Array.isArray(r))for(let e of r)e[4]===PDF_MIME_TYPE&&updatePdfUrlAndAddToList(e[3],e[1],t);return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISDAParsingFailed"]]),null}},parseFDAttachments=e=>{try{const t=[];if(Array.isArray(e))for(let r of e){const e=r[0]?.[3]||"";if(e?.length>0||e[3]===PDF_MIME_TYPE){const r=getAttachmentURL(e[1]);t.push({name:e[2],url:r})}}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDAParsingFailed"]]),null}},parseISEmailAndUpdateThreadData=(e,t,r)=>{if(e?.length>0)try{for(let a of e){const e=a[0],s=a[6],n=parseISAttachments(a[11]),i=parseISDriveAttachments(a);if(n?.length>0||i?.length>0){const l=a[71]&&9===a[71][0];t[r]||(t[r]={messages:{}}),t[r].messages[e]={id:e,timestamp:s,deleted:l,attachments:n,driveAttachments:i}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:ISEmailsParsingFailed"]])}},parseGMSetData=(e,t)=>{try{const r=getParsedJSON(e);if(!Array.isArray(r))return null;const a="Cl6csf"===t?r[1]:r[0]?.[0];if(!a||!Array.isArray(a))return null;const s={};for(let e of a)if("Cl6csf"===t){const t=e[1]?.[3],r=e[1]?.[4];parseISEmailAndUpdateThreadData(r,s,t)}else{const t=e[1],r=e[4]?.[4];parseGMSetDataA6JDVEmails(r,s,t)}return s}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:GMResponseParsingFailed"]]),null}},parseBVResponse=e=>{try{const t=getParsedJSON(e);if(!Array.isArray(t))return null;const r={},a=t[2];if(!a||!Array.isArray(a))return null;for(let e of a){const t=e[0][3],a=e[0]?.[4];parseISEmailAndUpdateThreadData(a,r,t)}return r}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:BVResponseParsingFailed"]]),null}},parseISResponse=e=>{try{const t=getParsedJSON(e);if(!Array.isArray(t))return null;const r=t[1]?.[5];if(!r||!Array.isArray(r))return null;const a={};for(let e of r){const t=e[0]?.[0],r=e[0]?.[2]?.[6]?.[0]?.[4];parseISEmailAndUpdateThreadData(r,a,t)}return a}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:ISResponseParsingFailed"]]),null}},domParser=new DOMParser,parseFDDriveAttachments=e=>{try{const t=[],r=e[1]?.[5]?.[1]?.[0]?.[2]?.[1];if(r&&r.includes("drive.google.com")){const e=domParser.parseFromString(r,"text/html").querySelectorAll(".gmail_chip.gmail_drive_chip>a");if(e?.length>0)for(let r of e){const e=r.getAttribute("href"),a=r.querySelector("span")?.textContent;updatePdfUrlAndAddToList(e,a,t)}}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDDAParsingFailed"]]),null}},parseA6JDVDriveAttachments=e=>{try{let t=[];const r=e[12]?.[28];if(Array.isArray(r))for(let e of r)e[4]===PDF_MIME_TYPE&&updatePdfUrlAndAddToList(e[3],e[1],t);return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:A6JDVDriveAttParsingFailed"]]),null}},parseA6JDVAttachments=e=>{try{let t=[];if(Array.isArray(e[11]))for(let r of e[11]){if(r[0]!==PDF_MIME_TYPE)continue;let e=getAttachmentURL(r[5]);t.push({name:r[1],url:e})}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:A6JDVAttParsingFailed"]]),null}},parseGMSetDataA6JDVEmails=(e,t,r)=>{if(e&&Array.isArray(e))try{for(let a of e){const e=a[0],s=a[6],n=parseA6JDVAttachments(a),i=parseA6JDVDriveAttachments(a);if(n?.length>0||i?.length>0){const l=9===a[71]?.[0];t[r]||(t[r]={messages:{}}),t[r].messages[e]={id:e,attachments:n,driveAttachments:i,timestamp:s,deleted:l}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:GMSetDataA6JDV"]])}},parseFDEmailAndUpdateThreadData=(e,t,r)=>{if(Array.isArray(e))try{for(let a of e){const e=a[0],s=parseFDAttachments(a[1]?.[13]),n=parseFDDriveAttachments(a);if(s?.length>0||n?.length>0){const i=a[1]&&a[1][38]&&9===a[1][38][0];t[r]||(t[r]={messages:{}}),t[r].messages[e]={id:e,attachments:s,driveAttachments:n,timestamp:a[1]?.[16],deleted:i}}}}catch(e){sendAnalytics([["DCBrowserExt:Gmail:FDEmailsParsingFailed"]])}},parseFDResponse=e=>{try{const t={},r=getParsedJSON(e);if(!Array.isArray(r))return null;const a=r[1];if(!a||!Array.isArray(a))return null;for(let e of a){const r=e[0],a=e[2];parseFDEmailAndUpdateThreadData(a,t,r)}return t}catch(e){return sendAnalytics([["DCBrowserExt:Gmail:FDResponseParsingFailed"]]),null}};state?.gmailConfig.enableListViewPromptInGmail&&(injectResponseListenerScript(),addMailDataEventListener());